{"version":3,"sources":["global.less","style.css","style.less","sprite.less"],"names":[],"mappings":"AAAA;EACE,iBAAA;EACA,UAAA;EACA,wCAAA;EACA,YAAA;CCCD;AACD;;;;;;;;;;;;EAYE;AACF;;;;;;;;;;;;;;;;;;;;;;;;EAwBE;AACF;;;;;;;;EAQE;ACxCF;EACE,eAAA;CD0CD;ACxCC;ECqGA,2DAAA;EANA,+BAAA;EAVA,YAAA;EAIA,aAAA;CF3CD","file":"style.css","sourcesContent":["body {\n  min-width: 320px;\n  margin: 0;\n  font-family: @font-family;\n  color: @text-color;\n}\n","body {\n  min-width: 320px;\n  margin: 0;\n  font-family: 'Open Sans_my', sans-serif;\n  color: #000;\n}\n/*\nLESS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: @icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n@icon-home: x y offset_x offset_y width height total_width total_height image_path name;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n@spritesheet: width height image @spritesheet-sprites;\n*/\n/*\nThe provided classes are intended to be used with the array-like variables\n\n.icon-home {\n  .sprite-width(@icon-home);\n}\n.icon-email {\n  .sprite(@icon-email);\n}\n\nExample usage in HTML:\n\n`display: block` sprite:\n<div class=\"icon-home\"></div>\n\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n\n// CSS\n.icon {\n  display: inline-block;\n}\n\n// HTML\n<i class=\"icon icon-home\"></i>\n*/\n/*\nThe `.sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of LESS\n\nThis must be run when you have at least 2 sprites.\n  If run with a single sprite, then there will be reference errors.\n\n.sprites(@spritesheet-sprites);\n*/\n.kraken {\n  display: block;\n}\n.kraken:before {\n  background-image: url(../img/sprite-08392118534259221.png);\n  background-position: -68px 0px;\n  width: 64px;\n  height: 64px;\n}\n","@import 'variables.less';\n\n@import 'global.less';\n@import 'sprite.less';\n// @import 'blocks/page-header.less';\n\n// .sprites(@spritesheet-sprites);\n\n// .chrome {\n//   .sprite(@chrome);\n// }\n\n.kraken {\n  display: block;\n\n  &:before {\n    .sprite(@kraken);\n  }\n}\n","/*\nLESS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: @icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n@icon-home: x y offset_x offset_y width height total_width total_height image_path name;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n@spritesheet: width height image @spritesheet-sprites;\n*/\n@github-logo-name: 'github-logo';\n@github-logo-x: 0px;\n@github-logo-y: 0px;\n@github-logo-offset-x: 0px;\n@github-logo-offset-y: 0px;\n@github-logo-width: 64px;\n@github-logo-height: 64px;\n@github-logo-total-width: 200px;\n@github-logo-total-height: 132px;\n@github-logo-image: '../img/sprite-08392118534259221.png';\n@github-logo: 0px 0px 0px 0px 64px 64px 200px 132px '../img/sprite-08392118534259221.png' 'github-logo';\n@kraken-name: 'kraken';\n@kraken-x: 68px;\n@kraken-y: 0px;\n@kraken-offset-x: -68px;\n@kraken-offset-y: 0px;\n@kraken-width: 64px;\n@kraken-height: 64px;\n@kraken-total-width: 200px;\n@kraken-total-height: 132px;\n@kraken-image: '../img/sprite-08392118534259221.png';\n@kraken: 68px 0px -68px 0px 64px 64px 200px 132px '../img/sprite-08392118534259221.png' 'kraken';\n@male-and-female-name: 'male-and-female';\n@male-and-female-x: 0px;\n@male-and-female-y: 68px;\n@male-and-female-offset-x: 0px;\n@male-and-female-offset-y: -68px;\n@male-and-female-width: 64px;\n@male-and-female-height: 64px;\n@male-and-female-total-width: 200px;\n@male-and-female-total-height: 132px;\n@male-and-female-image: '../img/sprite-08392118534259221.png';\n@male-and-female: 0px 68px 0px -68px 64px 64px 200px 132px '../img/sprite-08392118534259221.png' 'male-and-female';\n@musica-searcher-name: 'musica-searcher';\n@musica-searcher-x: 68px;\n@musica-searcher-y: 68px;\n@musica-searcher-offset-x: -68px;\n@musica-searcher-offset-y: -68px;\n@musica-searcher-width: 64px;\n@musica-searcher-height: 64px;\n@musica-searcher-total-width: 200px;\n@musica-searcher-total-height: 132px;\n@musica-searcher-image: '../img/sprite-08392118534259221.png';\n@musica-searcher: 68px 68px -68px -68px 64px 64px 200px 132px '../img/sprite-08392118534259221.png' 'musica-searcher';\n@placeholder-name: 'placeholder';\n@placeholder-x: 136px;\n@placeholder-y: 0px;\n@placeholder-offset-x: -136px;\n@placeholder-offset-y: 0px;\n@placeholder-width: 64px;\n@placeholder-height: 64px;\n@placeholder-total-width: 200px;\n@placeholder-total-height: 132px;\n@placeholder-image: '../img/sprite-08392118534259221.png';\n@placeholder: 136px 0px -136px 0px 64px 64px 200px 132px '../img/sprite-08392118534259221.png' 'placeholder';\n@spritesheet-width: 200px;\n@spritesheet-height: 132px;\n@spritesheet-image: '../img/sprite-08392118534259221.png';\n@spritesheet-sprites: @github-logo @kraken @male-and-female @musica-searcher @placeholder;\n@spritesheet: 200px 132px '../img/sprite-08392118534259221.png' @spritesheet-sprites;\n\n/*\nThe provided classes are intended to be used with the array-like variables\n\n.icon-home {\n  .sprite-width(@icon-home);\n}\n.icon-email {\n  .sprite(@icon-email);\n}\n\nExample usage in HTML:\n\n`display: block` sprite:\n<div class=\"icon-home\"></div>\n\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n\n// CSS\n.icon {\n  display: inline-block;\n}\n\n// HTML\n<i class=\"icon icon-home\"></i>\n*/\n.sprite-width(@sprite) {\n  width: extract(@sprite, 5);\n}\n\n.sprite-height(@sprite) {\n  height: extract(@sprite, 6);\n}\n\n.sprite-position(@sprite) {\n  @sprite-offset-x: extract(@sprite, 3);\n  @sprite-offset-y: extract(@sprite, 4);\n  background-position: @sprite-offset-x @sprite-offset-y;\n}\n\n.sprite-image(@sprite) {\n  @sprite-image: extract(@sprite, 9);\n  @sprite-image-bare: ~`\"@{sprite-image}\".slice(1, -1)`;\n  background-image: url(@sprite-image-bare);\n}\n\n.sprite(@sprite) {\n  .sprite-image(@sprite);\n  .sprite-position(@sprite);\n  .sprite-width(@sprite);\n  .sprite-height(@sprite);\n}\n\n/*\nThe `.sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of LESS\n\nThis must be run when you have at least 2 sprites.\n  If run with a single sprite, then there will be reference errors.\n\n.sprites(@spritesheet-sprites);\n*/\n.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {\n  @sprite: extract(@sprites, @i);\n  @sprite-name: e(extract(@sprite, 10));\n  .@{sprite-name} {\n    .sprite(@sprite);\n  }\n  .sprites(@sprites, @i + 1);\n}\n"]}